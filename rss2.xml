<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hector Fernandes</title>
    <link>https://hector.dev.br/</link>
    
    <atom:link href="https://hector.dev.br/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Cadete da 42SP üë®üèΩ‚ÄçüöÄ e Estudante de Eng. de Computa√ß√£o na UFPEL üíª. Esse blog √© uma forma de documentar publicamente os meus estudos.</description>
    <pubDate>Fri, 08 Oct 2021 22:55:37 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>ft_printf 42</title>
      <link>https://hector.dev.br/2021/09/15/ft-printf/</link>
      <guid>https://hector.dev.br/2021/09/15/ft-printf/</guid>
      <pubDate>Wed, 15 Sep 2021 21:44:47 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Geral&quot;&gt;&lt;a href=&quot;#Geral&quot; class=&quot;headerlink&quot; title=&quot;Geral&quot;&gt;&lt;/a&gt;Geral&lt;/h1&gt;&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;¬†N√ÉO COPIE, ENTENDA!!&lt;/span&gt;&lt;/p&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Geral"><a href="#Geral" class="headerlink" title="Geral"></a>Geral</h1><p><span style="color:red">¬†N√ÉO COPIE, ENTENDA!!</span></p><p>Prot√≥tipo da fun√ß√£o:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ft_prinf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *, ...)</span></span></span><br></pre></td></tr></table></figure><p>A ideia √© reescrever a fun√ß√£o <code>printf()</code> </p><p><a href="https://github.com/devhector/42_printf">repo no github</a></p><h4 id="Descricao"><a href="#Descricao" class="headerlink" title="Descri√ß√£o"></a>Descri√ß√£o</h4><p>Uma pequena descri√ß√£o das convers√µes requeridas:</p><p>‚Ä¢ %c imprime um √∫nico caractere. </p><p>‚Ä¢ %s imprime uma string. </p><p>‚Ä¢ %p O argumento void * ponteiro √© impresso em hexadecimal. </p><p>‚Ä¢ %d imprime um n√∫mero decimal (base 10).</p><p>‚Ä¢ %i imprime um inteiro na base 10.</p><p>‚Ä¢ %u imprime um n√∫mero decimal sem sinal (base 10). </p><p>‚Ä¢ %x imprime um n√∫mero em hexadecimal (base 16).</p><p>‚Ä¢ %% imprimir um sinal de porcentagem.</p><hr><p><img src="https://devhector.github.io/images/image-20210915185742218.png" alt="pdf"></p><hr><p>A primeira coisa a se fazer √© criar uma vari√°vel do tipo <code>va_list</code>, sendo assim:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">va_list ap</span><br></pre></td></tr></table></figure><p>e da√≠ chamamos a macro <code>va_start(va_list ap, last_arg)</code> onde o <code>last_arg</code> √© o ultimo argumento conhecido da fun√ß√£o, antes das ‚Äú‚Ä¶‚Äù:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Se a func for a ft_printf </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ft_prinf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">va_list ap</span>; <span class="comment">//criando a variavel ap do tipo va_list</span></span><br><span class="line"><span class="comment">//a macro seria declarada dessa forma:</span></span><br><span class="line">va_start(ap, format);</span><br></pre></td></tr></table></figure><p>üíª Ent√£o, a base da ft_printf √© basicamente assim: </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span><span class="title">ft_printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    va_listap;</span><br><span class="line">    <span class="keyword">int</span>i;</span><br><span class="line">    <span class="keyword">int</span>ret;</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    ret = <span class="number">0</span>;</span><br><span class="line">    va_start(ap, format);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">*Nesse la√ßo a ideia √© ele percorrer toda a string contida em format at√© o final,</span></span><br><span class="line"><span class="comment">*que no caso √© um &#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">while</span> (format[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *Aqui verifico se o caracter &#x27;%&#x27; existe, se ele existe fa√ßo uma verifica√ß√£o</span></span><br><span class="line"><span class="comment">        *se algum dos caracteres passados em seguida s√£o flags da printf com a fun√ß√£o</span></span><br><span class="line"><span class="comment">        *‚û°Ô∏è ft_strchr()‚¨ÖÔ∏è que se voc√™ chegou at√© aqui sabe como ela funciona</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">if</span> (format[i] == <span class="string">&#x27;%&#x27;</span> &amp;&amp; ft_strchr(<span class="string">&quot;cspdiuxX%&quot;</span>, format[i + <span class="number">1</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            ret += ft_printf_arg(format, i, ap);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        *Caso n√£o encontre, o caracter sera impresso e somado a &quot;ret&quot; que √© o controle</span></span><br><span class="line"><span class="comment">        *de quantos caracteres foram impressos.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ret += ft_putchar(format[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    va_end(ap);</span><br><span class="line">    <span class="keyword">return</span> (ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>caso n√£o tenha visto a strchr <a href="../../../08/27/GNL-get-next-line-42/">acesse aqui</a> e <a href="https://github.com/devhector/42_libft/blob/main/ft_strchr.c">aqui</a>.</p><p>a fun√ß√£o <code>ft_printf_arg(const char *fmt, int i, va_list ap)</code> serve como um switch case, pra cada flag que recebe:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*Aqui √© feito a verifica√ß√£o de qual flag foi passada, e em cada caso h√° uma fun√ß√£o</span></span><br><span class="line"><span class="comment">*espec√≠fica de impress√£o e retorna a quantidade de caracter impresso</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span><span class="title">ft_printf_arg</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *fmt, <span class="keyword">int</span> i, va_list ap)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;%&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (ft_putchar(fmt[i + <span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (ft_putchar(va_arg(ap, <span class="keyword">int</span>)));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (ft_putstr(va_arg(ap, <span class="keyword">char</span> *)));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;d&#x27;</span> || fmt[i + <span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (ft_putnbr(va_arg(ap, <span class="keyword">int</span>)));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (putnbr_u(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>)));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;x&#x27;</span> || fmt[i + <span class="number">1</span>] == <span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> (put_hex(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>), <span class="string">&quot;0123456789ABCDEF&quot;</span>));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> (put_hex(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>), <span class="string">&quot;0123456789abcdef&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fmt[i + <span class="number">1</span>] == <span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> (ft_putstr(<span class="string">&quot;0x&quot;</span>) + put_pointer(va_arg(ap, <span class="keyword">void</span> *), \</span><br><span class="line">                <span class="string">&quot;0123456789abcdef&quot;</span>));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Funcao-ft-putchar"><a href="#Funcao-ft-putchar" class="headerlink" title="Fun√ß√£o ft_putchar()"></a>Fun√ß√£o ft_putchar()</h5><p>A fun√ß√£o putchar() foi desenvolvida no projeto <a href="https://github.com/devhector/42_libft">libft</a>, e ela imprime um caracter com a fun√ß√£o <code>write()</code>. Usei uma personalizada, j√° que a sa√≠da seria a padr√£o.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span><span class="title">ft_putchar</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    write (<span class="number">1</span>, &amp;c, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Funcao-ft-putstr"><a href="#Funcao-ft-putstr" class="headerlink" title="Fun√ß√£o ft_putstr()"></a>Fun√ß√£o ft_putstr()</h5><p>A putstr() imprime uma cadeia de caracteres. Ela precisou tamb√©m ser personalizada, pois quando recebido uma string vazia, deve ser impresso na saida padr√£o a string <code>(null)</code> .</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span><span class="title">ft_putstr</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>len;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!str)</span><br><span class="line">    &#123;</span><br><span class="line">        write (<span class="number">1</span>, <span class="string">&quot;(null)&quot;</span>, <span class="number">6</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">6</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    len = ft_strlen(str); </span><br><span class="line">    write (<span class="number">1</span>, str, len);</span><br><span class="line">    <span class="keyword">return</span> (len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ft-putnbr"><a href="#ft-putnbr" class="headerlink" title="ft_putnbr()"></a>ft_putnbr()</h5><p>Imprime os caracteres que representam os numeros. Como a <code>write()</code> s√≥ imprime caracteres, √© preciso transformar os numeros em string, e pra isso a fun√ß√£o <code>itoa</code> √© usada.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span><span class="title">ft_putnbr</span><span class="params">(<span class="keyword">int</span> nbr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>*str;</span><br><span class="line">    <span class="keyword">int</span>len;</span><br><span class="line"></span><br><span class="line">    str = ft_itoa(nbr);</span><br><span class="line">    len = ft_putstr(str);</span><br><span class="line">    <span class="built_in">free</span>(str);</span><br><span class="line">    <span class="keyword">return</span> (len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="putnbr-u"><a href="#putnbr-u" class="headerlink" title="putnbr_u"></a>putnbr_u</h5><p>Uma varia√ß√£o da <code>putnbr()</code> e da <code>itoa</code> , a diferen√ßa √© que recebem como par√¢mentro um <code>unsigned int</code>.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span><span class="title">putnbr_u</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> nbr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>*str;</span><br><span class="line">    <span class="keyword">int</span>len;</span><br><span class="line"></span><br><span class="line">    str = ft_utoa(nbr);</span><br><span class="line">    len = ft_putstr(str);</span><br><span class="line">    <span class="built_in">free</span>(str);</span><br><span class="line">    <span class="keyword">return</span> (len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/C/">C</category>
      
      <category domain="https://hector.dev.br/tags/c/">c</category>
      
      <category domain="https://hector.dev.br/tags/42/">42</category>
      
      
      <comments>https://hector.dev.br/2021/09/15/ft-printf/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GNL - get_next_line 42</title>
      <link>https://hector.dev.br/2021/08/27/GNL-get-next-line-42/</link>
      <guid>https://hector.dev.br/2021/08/27/GNL-get-next-line-42/</guid>
      <pubDate>Fri, 27 Aug 2021 17:38:59 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Descricao&quot;&gt;&lt;a href=&quot;#Descricao&quot; class=&quot;headerlink&quot; title=&quot;Descri√ß√£o&quot;&gt;&lt;/a&gt;Descri√ß√£o&lt;/h1&gt;&lt;p&gt;O get_next_line √© um programa que retornar</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Descricao"><a href="#Descricao" class="headerlink" title="Descri√ß√£o"></a>Descri√ß√£o</h1><p>O get_next_line √© um programa que retornar uma linha do arquivo lido.</p><h2 id="O-que-sei-ate-agora"><a href="#O-que-sei-ate-agora" class="headerlink" title="O que sei at√© agora:"></a>O que sei at√© agora:</h2><h4 id="File-Descriptor-FD"><a href="#File-Descriptor-FD" class="headerlink" title="- File Descriptor (FD)"></a>- File Descriptor (FD)</h4><p>O file descriptor segundo o <a href="https://pt.wikipedia.org/wiki/Descritor_de_arquivo">wikipedia</a> √© um indicador abstrato para indicar um arquivo.</p><p>No GNL iremos usar a fun√ß√£o <code>read()</code> da biblioteca <code>&lt;unistd.h&gt;</code>. </p><h5 id="read"><a href="#read" class="headerlink" title="read()"></a>read()</h5><p> prot√≥tipo:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">ssize_t</span><span class="title">read</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">void</span> *buf, <span class="keyword">size_t</span> count)</span></span>;</span><br></pre></td></tr></table></figure><h5 id="Anotacoes-gerais"><a href="#Anotacoes-gerais" class="headerlink" title="Anota√ß√µes gerais."></a>Anota√ß√µes gerais.</h5><p>[22/08/21]</p><p>O valor de <code>fd</code> √© recebido na <code>main.c</code> atrav√©s do fun√ß√£o <code>open()</code>, seria algo do tipo: </p><p><code>fd = open(&quot;arquivo&quot;, O_RDONLY) </code> e o valor recebido de <code>fd</code> seria passado para o <code>get_next_line</code></p><p>minhas principais d√∫vidas s√£o:</p><ul><li><input checked="" disabled="" type="checkbox"> Como saber que √© a pr√≥xima linha? [check: 24/08]</li><li><input checked="" disabled="" type="checkbox"> a vari√°vel est√°tica √© usada para pegar a pr√≥xima linha? [check: 24/08]</li></ul><p>[24/08/21]</p><p>Descobri que a func <code>read()</code> volta a ler de onde o carrinho de leitura parou, essa era uma das preocupa√ß√µes que eu tive, de como eu controlaria para saber qual √© a pr√≥xima linha. </p><p>Criei a fun√ß√£o que l√™ a primeira parte e salva no buffer.</p><p>*<em>N√£o funcionou como deveria</em></p><p>[27/08/21]</p><p>Como tinha alguns trabalhos que precisavam ser entregues na faculdade, n√£o consegui retornar antes para o GNL.</p><hr><details>    <summary>Mostrar c√≥digo</summary>    <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!ft_strchr(save, <span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        r = read(fd, buffer, BUFFER_SIZE);</span><br><span class="line">        aux = save;</span><br><span class="line">        save = ft_strjoin(save, buffer);</span><br><span class="line">        <span class="built_in">free</span>(aux);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></details><p>O prot√≥tipo funcionou, a ideia que eu tive √© ir guardando o buffer at√© achar o <code>&#39;\n&#39;</code>assim que ele acha o <code>&#39;\n&#39;</code> na string static que eu guardo tudo que o buffer recebe, o while termina e eu retorno at√© o <code>&#39;\n&#39;</code> e  em seguida guardo o restante na pr√≥pria string static.</p><p>[06/09/21]</p><p>Aparentemente tudo funcionando, exceto pelo <code>TIME OUT</code> dado nos testes em que se tem um arquivo sem linha e muito grandes, mas vou tentar resolver assim que der.</p><hr><h5 id="Linha-geral"><a href="#Linha-geral" class="headerlink" title="Linha geral:"></a>Linha geral:</h5><p>A fun√ß√£o <code>read_file</code> √© autodescritiva, vou receber como par√¢metro o fd do arquivo e a variavel est√°tica. Nela eu crio um buffer com o tamnaho do <code>BUFFER_SIZE</code> e uso a fun√ß√£o <code>read()</code> pra ler o arquivo at√© encontrar o final dele - que seria retornado 0 - ou at√© encontrar uma linha (<code>\n</code>) , caso ocorra algum erro, o la√ßo de repeti√ß√£o √© parado, libero a variavel buffer que tinha mallocado e retorno NULL, caso contr√°rio, uso a fun√ß√£o <code>ft_strjoin()</code> para juntar o conte√∫do de backup com o buffer.</p><details>    <summary>Mostrar c√≥digo</summary>    <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">char</span>*<span class="title">read_file</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">char</span> *backup)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">char</span>*buffer;</span><br><span class="line">        <span class="keyword">int</span>read_bytes;</span><br><span class="line">        buffer = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * (BUFFER_SIZE + <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (!buffer)</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">        read_bytes = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (read_bytes &gt; <span class="number">0</span> &amp;&amp; !ft_strchr(backup, <span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            read_bytes = read(fd, buffer, BUFFER_SIZE);</span><br><span class="line">            <span class="keyword">if</span> (read_bytes &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            buffer[read_bytes] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            backup = ft_strjoin(backup, buffer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(buffer);</span><br><span class="line">        <span class="keyword">if</span> (read_bytes &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> (backup);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></details><p>A fun√ß√£o <code>get_line()</code> faz o que o nome j√° diz, ela pega a linha. Como par√¢metro ainda vamos usar o backup, fa√ßo uma verifica√ß√£o se a backup n√£o est√° com o primeiro caracter como null byte (<code>&#39;\0&#39;</code>), percorro ela inteira at√© achar uma (<code>&#39;\n&#39;</code>) ou o final dela, crio com o malloc uma string com o tamanho que li + 2 espa√ßos, pra caso haja um <code>\n</code> , eu coloque ele e logo em seguida o (<code>\0</code>)  e retorno essa linha.</p><details>    <summary>Mostrar c√≥digo</summary>    <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">char</span>*<span class="title">get_line</span><span class="params">(<span class="keyword">char</span>*backup)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>*line;</span><br><span class="line">    <span class="keyword">size_t</span>size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!*backup)</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (backup[size] &amp;&amp; backup[size] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        size++;</span><br><span class="line">    line = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * (size + <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">if</span> (!line)</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">    ft_strlcpy(line, backup, size + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (backup[size] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        line[size++] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    line[size] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> (line);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><p>A √∫ltima fun√ß√£o √© a <code>remove_read_line()</code> que remove a linha lida. Ela recebe como par√¢metro a <code>static</code> , nela eu procuro at√© a quebra de linha <code>\n</code> ou at√© chegar no final, se chega no final, dou um free na vari√°vel e retorno <code>NULL</code> , sen√£o, eu malloco uma nova variavel com o (tamanho total de backup, menos o tamanho da linha), copio o restante de backup pra uma nova vari√°vel e dou free nela.</p><details>    <summary>Mostrar c√≥digo</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">char</span>*<span class="title">remove_read_line</span><span class="params">(<span class="keyword">char</span> *backup)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>i;</span><br><span class="line">    <span class="keyword">int</span>j;</span><br><span class="line">    <span class="keyword">char</span>*new_backup;</span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (backup[i] &amp;&amp; backup[i] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        i++;</span><br><span class="line">    <span class="keyword">if</span> (!backup[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(backup);</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    new_backup = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * (ft_strlen(backup) - i + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">if</span> (!new_backup)</span><br><span class="line">        <span class="keyword">return</span> (<span class="literal">NULL</span>);</span><br><span class="line">    i++;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (backup[i])</span><br><span class="line">        new_backup[j++] = backup[i++];</span><br><span class="line">    new_backup[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">free</span>(backup);</span><br><span class="line">    <span class="keyword">return</span> (new_backup);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/C/">C</category>
      
      <category domain="https://hector.dev.br/tags/c/">c</category>
      
      <category domain="https://hector.dev.br/tags/42SP/">42SP</category>
      
      
      <comments>https://hector.dev.br/2021/08/27/GNL-get-next-line-42/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Conciliando Faculdade com os side projects</title>
      <link>https://hector.dev.br/2021/05/03/Conciliando-Faculdade-com-os-side-projects/</link>
      <guid>https://hector.dev.br/2021/05/03/Conciliando-Faculdade-com-os-side-projects/</guid>
      <pubDate>Tue, 04 May 2021 01:08:49 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Infelizmente eu ainda n√£o consigo conciliar kkkkk &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>Infelizmente eu ainda n√£o consigo conciliar kkkkk </p><p><img src="../images/meme_pcm.jpg" alt="panico_caos_medo"></p>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/vida/">vida</category>
      
      <category domain="https://hector.dev.br/tags/programacao/">programacao</category>
      
      
      <comments>https://hector.dev.br/2021/05/03/Conciliando-Faculdade-com-os-side-projects/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Teste para est√°gio [back-end]</title>
      <link>https://hector.dev.br/2021/03/03/Teste-para-estagio-back-end/</link>
      <guid>https://hector.dev.br/2021/03/03/Teste-para-estagio-back-end/</guid>
      <pubDate>Wed, 03 Mar 2021 13:11:34 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Inicio&quot;&gt;&lt;a href=&quot;#Inicio&quot; class=&quot;headerlink&quot; title=&quot;Inicio&quot;&gt;&lt;/a&gt;Inicio&lt;/h2&gt;&lt;p&gt;Bom, me submeti √† uma vaga de est√°gio para back-end. O</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Inicio"><a href="#Inicio" class="headerlink" title="Inicio"></a>Inicio</h2><p>Bom, me submeti √† uma vaga de est√°gio para back-end. O desafio √© eu montar uma API <code>RESTful</code> e ser√° um CRUD usando algum framework do tipo <code>express</code>  ou <code>Koa</code>  e um banco de dados relacional (que n√£o √© obrigat√≥rio). H√° tamb√©m um teste de <code>javascript</code>.</p><h3 id="Estudar"><a href="#Estudar" class="headerlink" title="Estudar"></a>Estudar</h3><p>Preciso estudar alguns assuntos antes de come√ßar a desenvolver a aplica√ß√£o, como sou noob na maior parte dos assuntos, vou separar de 2 a 3 dias para um estudo superficial afim de ter o conhecimento para realizar o desenvolvimento, e depois fa√ßo um estudo mais aprofundado.</p><h3 id="Topicos-a-serem-estudados"><a href="#Topicos-a-serem-estudados" class="headerlink" title="T√≥picos a serem estudados"></a>T√≥picos a serem estudados</h3><ul><li><input disabled="" type="checkbox"> SQL<ul><li><input checked="" disabled="" type="checkbox"> Principais comandos <code>[check: 03/03]</code></li><li><input disabled="" type="checkbox"> Relacionar tabelas</li></ul></li><li><input checked="" disabled="" type="checkbox"> PostgreSQL <code>[check: 03/03]</code><ul><li><input checked="" disabled="" type="checkbox"> Ler a documenta√ß√£o</li><li><input checked="" disabled="" type="checkbox"> Intalar na minha m√°quina</li><li><input checked="" disabled="" type="checkbox"> Configurar</li></ul></li><li><input checked="" disabled="" type="checkbox"> Knex.js<ul><li><input checked="" disabled="" type="checkbox"> Ler a documenta√ß√£o <code>[check: 03/03]</code></li><li><input checked="" disabled="" type="checkbox"> Integrar com nodeJS <code>[check: 04/03]</code></li><li><input checked="" disabled="" type="checkbox"> Configurar para postgresql <code>[check: 04/03]</code></li></ul></li></ul><h3 id="Configuracao-do-projeto"><a href="#Configuracao-do-projeto" class="headerlink" title="Configura√ß√£o do projeto"></a>Configura√ß√£o do projeto</h3><ul><li><input checked="" disabled="" type="checkbox"> Criar o projeto no github <code>[check: 03/03]</code></li><li><input checked="" disabled="" type="checkbox"> Separar as pastas do projeto <code>[check: 04/03]</code></li><li><input checked="" disabled="" type="checkbox"> Instalar o postgresql na minha m√°quina <code>[check: 03/03]</code></li><li><input checked="" disabled="" type="checkbox"> Instalar as depend√™ncia <code>[check: 04/03]</code></li></ul><h3 id="Observacoes"><a href="#Observacoes" class="headerlink" title="Observa√ß√µes"></a>Observa√ß√µes</h3><p><code>[03/03]</code> Fiz um apanhado geral das coisas que tinha que estudar, assisti alguns v√≠deos, li as documenta√ß√µes oficiais das ferramentas que ia usar. Criei mais ou menos a base da aplica√ß√£o. Fiz tamb√©m os exerc√≠cios em javascript puro, devem faltar ainda uns 5 a terminar.</p><p><code>[04/03]</code> Hoje comecei me aprofundando no knex.js e como integrar com o nodejs, ainda n√£o entendi 100% mas to come√ßando a caminhar. </p><ul><li><p>Consegui fazer o knex conectar ao postgres (aconteceram alguns erros, mas nada fora do normal, no print n√£o apareceu, mas um dos erros ele n√£o conectava ao banco, era s√≥ mudar a senha padr√£o com o comando <code>ALTER USER postgres PASSWORD &#39;senha&#39;;</code> )</p><p><a href="https://i.imgur.com/VAMIrex.png">erro apresentado - print</a></p></li><li><p>Tentei organizar a aplica√ß√£o no modelo <code>MVC</code> e pelo que li, acho que t√° organizado direito </p></li><li><p>Consegui tamb√©m fazer as rotas get e post da rota <code>api/navers</code> , mas ainda falta retornar o obj do usu√°rio criado.</p></li></ul><p><code>[05/03]</code> N√£o consegui pegar muito no projeto, tinha umas coisas para resolver. Mas fiz alguns ajustes e consegui retornar o usu√°rio. No knex tem a fun√ß√£o <code>.returning()</code> e acabei vendo <a href="https://www.youtube.com/watch?v=wfrn21E2NaU&ab_channel=productioncoder">nesse video</a> o cara usando e adaptei pra o que eu precisava, n√£o sei se est√° correto mas funciona. </p><h4 id="Coisas-que-faltam-resolver"><a href="#Coisas-que-faltam-resolver" class="headerlink" title="Coisas que faltam resolver"></a>Coisas que faltam resolver</h4><p><code>[04/03]</code></p><ul><li><input checked="" disabled="" type="checkbox"> retorno da fun√ß√£o <code>store</code> no controller <code>[check: 05/03]</code></li><li><input checked="" disabled="" type="checkbox"> criar tabela <code>projetos</code> <code>[07/03]</code></li></ul><h4 id="Finalizando"><a href="#Finalizando" class="headerlink" title="Finalizando"></a>Finalizando</h4><p><code>[08/03]</code> S√°bado e domingo eu fiz poucas coisas, mas deixei bastante coisa adiantada. Hoje eu terminei de criar as rotas, fiz uma adapta√ß√£o para que a data fosse exibida sem o timezone. Adicionei tamb√©m a lib <code>helmet</code> pra dar uma seguran√ßa a aplica√ß√£o.</p>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/nodejs/">nodejs</category>
      
      <category domain="https://hector.dev.br/tags/js/">js</category>
      
      <category domain="https://hector.dev.br/tags/postgresql/">postgresql</category>
      
      
      <comments>https://hector.dev.br/2021/03/03/Teste-para-estagio-back-end/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Mudando o tema do Hexo</title>
      <link>https://hector.dev.br/2021/02/03/Mudando-o-tema-do-Hexo/</link>
      <guid>https://hector.dev.br/2021/02/03/Mudando-o-tema-do-Hexo/</guid>
      <pubDate>Thu, 04 Feb 2021 00:41:26 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Introducao&quot;&gt;&lt;a href=&quot;#Introducao&quot; class=&quot;headerlink&quot; title=&quot;Introdu√ß√£o&quot;&gt;&lt;/a&gt;Introdu√ß√£o&lt;/h2&gt;&lt;p&gt;Para deixar o seu blog pessoal com seu</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Introducao"><a href="#Introducao" class="headerlink" title="Introdu√ß√£o"></a>Introdu√ß√£o</h2><p>Para deixar o seu blog pessoal com seu estilo exitem variados temas que voc√™ pode instalar no Hexo. E como complemento do post ensinando a usar o Hexo, farei esse aqui para mostrar como √© simples instalar um tema no Hexo.</p><h2 id="Procurando-um-tema"><a href="#Procurando-um-tema" class="headerlink" title="Procurando um tema"></a>Procurando um tema</h2><p>A primeira coisa que voc√™ precisa fazer √© ir na sess√£o de <a href="https://hexo.io/themes/">temas</a> na p√°gina do Hexo e escolher o que mais te agrada.</p><h2 id="Instalando-o-tema-escolhido"><a href="#Instalando-o-tema-escolhido" class="headerlink" title="Instalando o tema escolhido"></a>Instalando o tema escolhido</h2><p>No meu caso eu escolhi o cactus, que no momento t√° me agradando, ent√£o vamos instalar ele.</p><p>na pasta raiz do seu blog, digite:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>Agora vamos editar o <code>_config.yml</code> ll√° vamos trocar a tag <code>theme: default</code> para <code>theme: cactus</code> . Pronto, agora o tema t√° instalado.</p><h2 id="Configurando-o-tema"><a href="#Configurando-o-tema" class="headerlink" title="Configurando o tema"></a>Configurando o tema</h2><p>Cada tema tem sua configura√ß√£o, ent√£o na documenta√ß√£o de cada tema ser√° mostrado como configurar passo-a-passo.</p>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/hexo/">hexo</category>
      
      <category domain="https://hector.dev.br/tags/github/">github</category>
      
      <category domain="https://hector.dev.br/tags/tema/">tema</category>
      
      
      <comments>https://hector.dev.br/2021/02/03/Mudando-o-tema-do-Hexo/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CRUD com NodeJs + Express + Mongodb</title>
      <link>https://hector.dev.br/2021/02/03/CRUD-com-NodeJs-Express-Mongodb/</link>
      <guid>https://hector.dev.br/2021/02/03/CRUD-com-NodeJs-Express-Mongodb/</guid>
      <pubDate>Wed, 03 Feb 2021 20:40:28 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;[Post em andamento, ser√° acrescentado as informa√ß√µes de acordo com o avan√ßo do meu estudo]&lt;/p&gt;
&lt;h2 id=&quot;Repositorio&quot;&gt;&lt;a href=&quot;#Repositorio</description>
        
      
      
      
      <content:encoded><![CDATA[<p>[Post em andamento, ser√° acrescentado as informa√ß√µes de acordo com o avan√ßo do meu estudo]</p><h2 id="Repositorio"><a href="#Repositorio" class="headerlink" title="Reposit√≥rio"></a>Reposit√≥rio</h2><p>O reposit√≥rio no <a href="https://github.com/devhector/nodejs-CRUD">github</a> cont√©m todas as depend√™ncias, fa√ßa o clone e d√™ um <code>npm install</code></p><h2 id="Inicio-do-projeto"><a href="#Inicio-do-projeto" class="headerlink" title="In√≠cio do projeto"></a>In√≠cio do projeto</h2><p>Caso n√£o queira acessar o reposit√≥rio, voc√™ pode digitar o seguinte comando no terminal <code>npm i body-parser express mongoose request dotenv</code> e ser√° instalado as depend√™ncias que vamos utilizar.</p><h3 id="Criando-o-server"><a href="#Criando-o-server" class="headerlink" title="Criando o server"></a>Criando o server</h3><p>vamos criar um arquivo com o nome de <code>server.js</code>, e vamos colocar:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dotenv = <span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> product = <span class="built_in">require</span>(<span class="string">&#x27;./app/models/product&#x27;</span>);</span><br><span class="line"></span><br><span class="line">dotenv.config();</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> port = process.env.PORT || <span class="number">8003</span>;</span><br><span class="line"><span class="keyword">let</span> userDB = process.env.DB_USER;</span><br><span class="line"><span class="keyword">let</span> passwordDB = process.env.DB_PASSWORD;</span><br><span class="line"><span class="keyword">let</span> nameDB = process.env.DB_NAME;</span><br><span class="line"><span class="keyword">let</span> hostDB = process.env.DB_HOST;</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">`mongodb+srv://<span class="subst">$&#123;userDB&#125;</span>:<span class="subst">$&#123;passwordDB&#125;</span>@<span class="subst">$&#123;hostDB&#125;</span>.mongodb.net/<span class="subst">$&#123;nameDB&#125;</span>?retryWrites=true&amp;w=majority`</span>, &#123;<span class="attr">useUnifiedTopology</span>: <span class="literal">true</span>, <span class="attr">useNewUrlParser</span>: <span class="literal">true</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> router = express.Router();</span><br><span class="line"></span><br><span class="line">router.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Est√° acontecendo algo.&quot;</span>);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    res.json(&#123; <span class="attr">message</span>: <span class="string">&#x27;Funcionando lindamente!&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&#x27;/api&#x27;</span>, router);</span><br><span class="line"></span><br><span class="line">app.listen(port);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Iniciando o server na porta &#x27;</span> + port);</span><br></pre></td></tr></table></figure><h3 id="Rotas"><a href="#Rotas" class="headerlink" title="Rotas"></a>Rotas</h3><table><thead><tr><th align="center">Rotas</th><th align="center">http</th><th align="center">Descri√ß√£o</th></tr></thead><tbody><tr><td align="center">/api/produtos</td><td align="center">GET</td><td align="center">Selecionar todos</td></tr><tr><td align="center">/api/produtos</td><td align="center">POST</td><td align="center">Criar por id</td></tr><tr><td align="center">/api/produtos/:produto_id</td><td align="center">GET</td><td align="center">Selecionar por id</td></tr><tr><td align="center">/api/produtos/:produto_id</td><td align="center">PUT</td><td align="center">Atualizar por id</td></tr><tr><td align="center">/api/produtos/:produto_id</td><td align="center">DELETE</td><td align="center">Excluir por id</td></tr></tbody></table><p>[Update: 13/02/21]</p>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/nodejs/">nodejs</category>
      
      <category domain="https://hector.dev.br/tags/js/">js</category>
      
      <category domain="https://hector.dev.br/tags/mongodb/">mongodb</category>
      
      
      <comments>https://hector.dev.br/2021/02/03/CRUD-com-NodeJs-Express-Mongodb/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Criando um blog pessoal com Hexo e Github Pages</title>
      <link>https://hector.dev.br/2021/01/31/Criando-um-blog-pessoal-com-Hexo-e-Github-Pages/</link>
      <guid>https://hector.dev.br/2021/01/31/Criando-um-blog-pessoal-com-Hexo-e-Github-Pages/</guid>
      <pubDate>Mon, 01 Feb 2021 00:52:56 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Introducao&quot;&gt;&lt;a href=&quot;#Introducao&quot; class=&quot;headerlink&quot; title=&quot;Introdu√ß√£o&quot;&gt;&lt;/a&gt;Introdu√ß√£o&lt;/h2&gt;&lt;p&gt;A ideia desse post √© fazer um tutorial</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Introducao"><a href="#Introducao" class="headerlink" title="Introdu√ß√£o"></a>Introdu√ß√£o</h2><p>A ideia desse post √© fazer um tutorial r√°pido para que voc√™ tenha de forma gratuita um meio de tornar seu estudo documentado e p√∫blico, assim como diz no artigo <a href="https://segredo.dev/aprenda-em-publico/">‚ÄúAprenda em p√∫blico‚Äù</a>. E esse blog tem exatamente esse prop√≥sito, al√©m de poder ajudar quem est√° come√ßando, assim como eu.</p><h2 id="Meu-ambiente-de-desenvolvimento"><a href="#Meu-ambiente-de-desenvolvimento" class="headerlink" title="Meu ambiente de desenvolvimento:"></a>Meu ambiente de desenvolvimento:</h2><p>‚Äã    <em>Sistema operacional: Zorin OS</em></p><p>‚Äã    <em>NodeJs: v14.15.4</em></p><p>‚Äã    <em>NPM: 6.14.11</em></p><h2 id="Requerimentos"><a href="#Requerimentos" class="headerlink" title="Requerimentos"></a>Requerimentos</h2><p>Voc√™ vai precisar ter instalado o NodeJS, o NPM e o git</p><p>O git voc√™ consegue instalar com o comando:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git-all</span><br></pre></td></tr></table></figure><p>Agora o nodeJS e o NPM recomendo que sigam esse <a href="https://github.com/nodesource/distributions/blob/master/README.md#debinstall">tutorial</a> ou digitando no terminal:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Usando Ubuntu</span></span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</span><br><span class="line">$ sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Usando Debian, como root</span></span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_14.x | bash -</span><br><span class="line">$ apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># NPM</span></span><br><span class="line">$ sudo apt install npm</span><br></pre></td></tr></table></figure><p>Para ter certeza de que foi instalado, digite o comando:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node -v &amp;&amp; npm -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sa√≠da:</span></span><br><span class="line">v14.15.4</span><br><span class="line">6.14.11</span><br></pre></td></tr></table></figure><h2 id="Instalando-o-Hexo"><a href="#Instalando-o-Hexo" class="headerlink" title="Instalando o Hexo"></a>Instalando o Hexo</h2><p>Para instalar o Hexo usaremos o npm, abra o terminal e digite:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><h2 id="Criando-uma-pagina-com-o-Github-Pages"><a href="#Criando-uma-pagina-com-o-Github-Pages" class="headerlink" title="Criando uma p√°gina com o Github Pages"></a>Criando uma p√°gina com o Github Pages</h2><p>Acesse o <a href="https://github.com/">Github</a> e clique no <strong>+</strong> no lado direito do site:</p><img src="https://i.imgur.com/f7PIofI.png" alt="github" align='left' /><p>E depois em <code>New repository</code></p><p>O nome do reposit√≥rio deve ser <code>username.github.io</code> onde <code>username</code> √© seu nome de usu√°rio no github. Como exemplo vou usar o meu que √© <code>devhector</code>, o reposit√≥rio deve ser <code>devhector.github.io</code>.</p><h2 id="Criando-um-projeto-para-seu-Github-Pages"><a href="#Criando-um-projeto-para-seu-Github-Pages" class="headerlink" title="Criando um projeto para seu Github Pages"></a>Criando um projeto para seu Github Pages</h2><p>Vamos criar um projeto com o Hexo, para entre na pasta que deseja salvar, abra o teminal no local e digite:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init devhector.github.io</span><br></pre></td></tr></table></figure><p>Substitua o <code>devhector</code> pelo seu usu√°rio github.</p><p>Entre na pasta do projeto criada:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd devhector.github.io</span><br></pre></td></tr></table></figure><p>E depois:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="Levantando-o-server-localmente"><a href="#Levantando-o-server-localmente" class="headerlink" title="Levantando o server localmente"></a>Levantando o server localmente</h2><p>Digite: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>acesse no navegador: </p><p><code>http://localhost:4000/</code></p><p>Agora seu blog est√° funcionando, mas localmente.</p><h2 id="Colocando-as-informacoes-do-seu-blog"><a href="#Colocando-as-informacoes-do-seu-blog" class="headerlink" title="Colocando as informa√ß√µes do seu blog"></a>Colocando as informa√ß√µes do seu blog</h2><p>Na pasta raiz vamos editar o <code>_config.yml</code>, eu usarei o <a href="https://micro-editor.github.io/">micro</a>, mas voc√™ pode usar o editor de texto que quiser como: <code>nano, vim, gedit...</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo micro _config.yml</span></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Site</span></span><br><span class="line">title: Hector Fernandes</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;Estudante de Eng. de Computa√ß√£o na UFPEL üíª. </span><br><span class="line">Esse blog √© uma forma de documentar publicamente os meus estudos.&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: Hector Fernandes</span><br><span class="line">language: pt-br</span><br><span class="line">timezone: America/Sao_Paulo</span><br></pre></td></tr></table></figure><p>Edite da forma que achar melhor. Veja a <a href="https://hexo.io/docs/configuration.html">documenta√ß√£o oficial</a></p><h2 id="Informando-seu-repositorio-Github"><a href="#Informando-seu-repositorio-Github" class="headerlink" title="Informando seu reposit√≥rio Github"></a>Informando seu reposit√≥rio Github</h2><p>Primeiro vamos instalar o pacote <code>hexo-deployer-git</code> , digite:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>e edite o  <code>_config.yml</code>, vamos at√© a parte onde est√° escrito <code>deploy</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo micro _config.yml</span></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:devhector/devhector.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>onde <code>repo:</code> voc√™ vai colocar o mesmo de quando usa o <code>git clone</code></p><img src='https://i.imgur.com/bqUGfAw.png' align='left'/><p>Veja a <a href="https://github.com/hexojs/hexo-deployer-git">documenta√ß√£o oficial</a></p><h2 id="Monitorando-os-arquivos-mudados"><a href="#Monitorando-os-arquivos-mudados" class="headerlink" title="Monitorando os arquivos mudados"></a>Monitorando os arquivos mudados</h2><p>Abra uma nova aba do terminal na pasta raiz <code>devhecto.github.io</code> :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --watch</span><br></pre></td></tr></table></figure><p>Isso vai fazer com que o Hexo monitore os arquivos mudados, voc√™ pode se aprofundar mais <a href="https://hexo.io/docs/generating.html">aqui</a>.</p><h2 id="Criando-um-post"><a href="#Criando-um-post" class="headerlink" title="Criando um post"></a>Criando um post</h2><p>Para criar um post, digite no terminal:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;t√≠tulo do post&quot;</span><br></pre></td></tr></table></figure><p>e para editar:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd source/_posts/</span><br></pre></td></tr></table></figure><p>e editamos o arquivo <code>titulo-do-post.md</code> criado, usando o <code>markdown</code>.</p><h2 id="Fazendo-o-deploy-do-blog"><a href="#Fazendo-o-deploy-do-blog" class="headerlink" title="Fazendo o deploy do blog"></a>Fazendo o deploy do blog</h2><p>Para finalizar, vamos fazer o deploy, para isso digite:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo deploy</span></span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/docs/generating">Documenta√ß√£o oficial</a></p><p>Geralmente para a nossa p√°gina ir para o ar na primeira vez, demora em m√©dia 30 min. Mas voc√™ pode acessar <a href="https://devhector.github.io/">devhector.github.io</a> para testar se o blog j√° est√° no ar. (lembrando de sempre substituir o <code>devhector</code> com o seu usu√°rio).</p><p><a href="https://devhector.github.io/2021/02/03/Mudando-o-tema-do-Hexo/">No pr√≥ximo post, irei mostrar como √© simples mudar o tema usando o Hexo.</a></p>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/tutorial/">tutorial</category>
      
      <category domain="https://hector.dev.br/tags/hexo/">hexo</category>
      
      <category domain="https://hector.dev.br/tags/github/">github</category>
      
      
      <comments>https://hector.dev.br/2021/01/31/Criando-um-blog-pessoal-com-Hexo-e-Github-Pages/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Meu primeiro post</title>
      <link>https://hector.dev.br/2021/01/31/Meu-primeiro-post/</link>
      <guid>https://hector.dev.br/2021/01/31/Meu-primeiro-post/</guid>
      <pubDate>Sun, 31 Jan 2021 18:59:33 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Testando-alguns-recursos&quot;&gt;&lt;a href=&quot;#Testando-alguns-recursos&quot; class=&quot;headerlink&quot; title=&quot;Testando alguns recursos&quot;&gt;&lt;/a&gt;Testando algun</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Testando-alguns-recursos"><a href="#Testando-alguns-recursos" class="headerlink" title="Testando alguns recursos"></a>Testando alguns recursos</h2><p>Os c√≥digos funcionam da seguinte forma.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`hello <span class="subst">$&#123;a&#125;</span> and <span class="subst">$&#123;b&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A lista funciona assim:</p><ol><li>lista</li><li>ordenada</li><li>numerada</li></ol><p>lista de tarefas</p><ul><li><input disabled="" type="checkbox"> fazer coisa</li><li><input disabled="" type="checkbox"> fazer outra coisa</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt install build-essential</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      <category domain="https://hector.dev.br/tags/primeiro-post/">primeiro-post</category>
      
      
      <comments>https://hector.dev.br/2021/01/31/Meu-primeiro-post/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
